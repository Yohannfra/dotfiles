#!/bin/bash

function check_file_type() # 1 dir, 2 file, 0 none
{
    if [[ -d $1 ]]; then
        return 1
    elif [[ -f $1 ]]; then
        return 2
    else
        return 0
    fi
}

function print_help() # TODO
{
    echo "usage: cit [options] [files]"
    echo -e "\t-h --help\tshow this help"
    echo -e "\tinit initalize the repository"
    echo -e "\tadd\tadd a file to the reposiory"
}

function check_parameters() # DONE
{
    valid_commands=("add" "untrack" "commit" "push" "init")
    for i in "${valid_commands[@]}"; do
        if [ $1 == $i ]; then
            return 1
        fi
    done
    return 0
}

function add() # DONE
{
    if [ $# -ne 2 ]; then
        echo "usage: cit add file"
        exit 1
    fi
    if [ ! -f "$PWD/$2" ]; then
        echo "couldnt find file"
        exit 1
    fi
    if [ ! -f "$HOME/$2" ]; then
        echo "File $2 is already tracked, use cit update if you want to update it"
        exit 1
    fi    
    cp -r "$PWD/$2" "$HOME/.cit/"
    git --git-dir="$HOME/.cit/.git" add  "$2"
}

function update()
{
    if [ $# -ne 2 ]; then
        echo "usage: cit update file"
        exit 1
    fi
    if [ ! -f "$PWD/$2" ]; then
        echo "couldnt find file"
        exit 1
    fi
    echo "$PWD/$2"
}

function untrack()
{
    if [ $# -ne 2 ]; then
        echo "usage: cit untrack file"
        exit 1
    fi
    if [ ! -f "$PWD/$2" ]; then
        echo "couldnt find file"
        exit 1
    fi
    echo "untrack"   
}

function init()
{
    if [ $# -ne 1 ]; then
        echo "usage: cit init"
        exit 1
    fi
    if [ ! -d "$HOME/.cit" ]; then
        echo "$HOME/.cit already exists"
        exit 1
    fi
    mkdir -p "$HOME/.cit"
    echo -e "Created $HOME/.cit\n"
    git init "$HOME/.cit"

    echo -ne "What is the url of the remote : "
    read remote_url
    git --git-dir="$HOME/.cit/.git" remote add origin "$remote_url"
    git --git-dir="$HOME/.cit/.git" remote -v
}

function commit()
{
    if [ $# -ne 2 ]; then
        echo "usage: cit commit message"
        exit 1
    fi

    echo "commit message $2"   
}

function push()
{
    if [ $# -ne 1 ]; then
        "usage: cit push"
        exit 1
    fi
    echo "push"
}


function main()
{
    if [ $# -eq 0 ] || check_parameters $@; then
        print_help
        exit 1
    fi
    if [ $1 == "init" ]; then
        init $@
    elif [ $1 == "add" ]; then
        ``  add $@
    fi
    exit 0
}

main $@
