#!/usr/bin/python3

import time
import sys
import datetime
import os
import subprocess as s

import fontawesome as fa

last_call = 0

def get_disk_space():
    disk_space = os.popen("df -h / | grep / | cut -d \" \" -f 8").read().strip()
    return  fa.icons['save'] + "  "+ disk_space

def get_time():
    months = ["January", "February", "March", "April", "May", "June", "July",
     "August", "September", "October", "November", "December"]

    format_time = fa.icons['calendar'] + "  %d-%m-%Y | " + fa.icons['clock'] + "  %H:%M"
    return datetime.datetime.now().strftime(format_time)

def get_battery():
    global last_call
    power = os.popen("upower -i /org/freedesktop/UPower/devices/battery_BAT0").read().split()
    state_icons = [fa.icons['battery-empty'], fa.icons['battery-quarter'],
            fa.icons['battery-half'], fa.icons['battery-three-quarters'],
            fa.icons['battery-full']]

    if power[power.index('state:') + 1] == 'charging':
        return fa.icons['plug'] + '  ' + power[power.index('percentage:') + 1]
    elif power[power.index('state:') + 1] == 'fully-charged':
        return fa.icons['battery-full'] + '  full'
    else:
        power_percentage = int(power[power.index('percentage:') + 1].replace('%', ''))
        if power_percentage <= 15 and power_percentage != last_call:
            s.call(['notify-send','LOW BATTERY','your battery is low !'])
            last_call =  power_percentage

        state = (0 if 0 < power_percentage <= 20 else 1 if 20 < power_percentage <= 40 else 2
        if 40 < power_percentage <= 60 else 3 if 60 < power_percentage <= 80 else 4)

        return state_icons[state] + "  " + power[power.index('percentage:') + 1]

def get_sound():
    return fa.icons['volume-up'] + " " + os.popen("amixer sget 'Master'").read().split()[20]

def write(data):
    sys.__stdout__.write('%s\n' % data)
    sys.__stdout__.flush()

def main():
    while True:
        data = ""
        data += get_time() + " | "
        data += get_battery() + " | "
        data += get_sound() + " | "
        data += get_disk_space() + " |  "
        write(data)
        time.sleep(1)

main()
