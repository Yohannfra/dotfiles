#!/bin/bash

monitor=`xrandr | cat | grep "connected" | grep -v "eDP1"  | grep -v "disconnected" | cut -d ' ' -f1`

if [ $# -ne 1 ] ; then
    exit 1
fi

# Those xrandr lines were generated by arandr. Do not change it
if [ $1 == "right" ]; then
    # RIGHT
    xrandr --output VIRTUAL1 --off --output eDP1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output DP1 --off --output HDMI2 --off --output HDMI1 --off --output $monitor --mode 1920x1080 --pos 1920x0 --rotate normal
elif [ $1 == "left" ]; then
    # LEFT
    xrandr --output VIRTUAL1 --off --output eDP1 --primary --mode 1920x1080 --pos 1920x0 --rotate normal --output DP1 --off --output HDMI2 --off --output HDMI1 --off --output $monitor --mode 1920x1080 --pos 0x0 --rotate normal
elif [ $1 == "top" ]; then
    # TOP
    xrandr --output VIRTUAL1 --off --output eDP1 --primary --mode 1920x1080 --pos 0x1080 --rotate normal --output DP1 --off --output HDMI2 --off --output HDMI1 --off --output $monitor --mode 1920x1080 --pos 0x0 --rotate normal
elif [ $1 == "extern" ]; then
    # EXTERN
    xrandr --output VIRTUAL1 --off --output eDP1 --off --output DP1 --off --output HDMI2 --off --output HDMI1 --off --output $monitor --mode 1920x1080 --pos 0x0 --rotate normal
elif [ $1 == "intern" ]; then
    # INTERN
    xrandr --output VIRTUAL1 --off --output eDP1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output DP1 --off --output HDMI2 --off --output HDMI1 --off --output DP2 --off
elif [ $1 == "mirror" ]; then
    # MIRROR
    xrandr --output eDP1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output $monitor --mode 1920x1080 --pos 0x0 --rotate normal --output DP2 --off --output HDMI1 --off --output HDMI2 --off --output VIRTUAL1 --off
elif [ $1 == "home" ]; then
    # HOME, SAMSUNG SCREEN AND THINKVISION
    xrandr --output eDP1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output DP1 --mode 1920x1080 --pos 1920x1080 --rotate normal --output DP2 --off --output HDMI1 --off --output HDMI2 --mode 1920x1080 --pos 1920x0 --rotate normal --output VIRTUAL1 --off
    i3-msg "workspace 15, move workspace to output HDMI2"
    i3-msg "workspace 10, move workspace to output DP1"
else
    exit 1
fi

function check_if_workspace_exists()
{
    i3-msg -t get_workspaces | jq | grep "name" | sed -e "s/\"name\"//g" \
        -e "s/://g" -e "s/,//g" -e "s/ //g" | grep "\"$1\"" >> /dev/null
    return $?
}

if [[ $1 = "left" ]] || [[ $1 = "right" ]] || [[ $1 = "top" ]] ; then
    first_found=0
    for (( c=10; c<=20; c++ ))
    do
        if check_if_workspace_exists $c; then
            i3-msg "workspace $c, move workspace to output $monitor"
            if [ $first_found -eq 0 ]; then
                first_found=$c
            fi
        fi
    done
    if [ $first_found -ne 0 ]; then
        i3-msg "workspace $first_found"
    fi
fi
